{"version":3,"sources":["assets/resources/tool/UiManager.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAM,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAA+B,6BAAY;IAA3C;QAAA,qEAqDC;QAlDG,aAAO,GAAY,IAAI,CAAC;QAGxB,eAAS,GAAY,IAAI,CAAC;;IA+C9B,CAAC;IA3CG,0BAAM,GAAN;QACI,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;QAEpB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;IAC9B,CAAC;IAED,wBAAI,GAAJ,UAAK,IAAI,EAAE,IAAK;QAAhB,iBAqBC;QApBG,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;gCACjB,CAAC;YACN,EAAE,CAAC,GAAG,CAAC,kBAAgB,IAAI,CAAC,CAAC,CAAG,CAAC,CAAC;YAClC,IAAI,EAAE,GAAG,OAAK,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YACrC,IAAI,EAAE,EAAE;gBACJ,EAAE,CAAC,MAAM,GAAG,IAAI,CAAC;gBACjB,EAAE,CAAC,OAAO,IAAI,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aAClC;iBAAM;gBACH,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,YAAU,IAAI,CAAC,CAAC,CAAG,EAAE,EAAE,CAAC,MAAM,EAAE,UAAC,GAAG,EAAE,MAAM;oBAC1D,IAAI,GAAG,EAAE;wBACL,OAAO,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;qBACxB;oBACD,EAAE,GAAG,EAAE,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;oBAC5B,EAAE,CAAC,MAAM,GAAG,KAAI,CAAC,IAAI,CAAC;oBACtB,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;oBACjC,EAAE,CAAC,MAAM,GAAG,IAAI,CAAC;oBACjB,EAAE,CAAC,OAAO,IAAI,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBACnC,CAAC,CAAC,CAAA;aACL;;;QAjBL,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE;oBAA3B,CAAC;SAkBT;IACL,CAAC;IAED,yBAAK,GAAL,UAAM,IAAI;QACN,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,OAAO,IAAI,IAAI,QAAQ,EAAE;YACzB,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;SACzB;QAED,EAAE,CAAC,GAAG,CAAC,mBAAiB,IAAM,CAAC,CAAC;QAChC,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACrC,IAAI,KAAK,EAAE;YACP,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,EAAE,CAAC;YACjC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC;SACxB;IACL,CAAC;IAjDD;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;8CACM;IAGxB;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;gDACQ;IANjB,SAAS;QADrB,OAAO;OACK,SAAS,CAqDrB;IAAD,gBAAC;CArDD,AAqDC,CArD8B,EAAE,CAAC,SAAS,GAqD1C;AArDY,8BAAS","file":"","sourceRoot":"/","sourcesContent":["const { ccclass, property } = cc._decorator;\n\n@ccclass\nexport class UiManager extends cc.Component {\n\n    @property(cc.Node)\n    uiLayer: cc.Node = null;\n\n    @property(cc.Node)\n    propLayer: cc.Node = null;\n\n    uiPrefabCache: Object\n    propPrefabCache: Object\n    onLoad() {\n        window.UiMgr = this;\n\n        this.uiPrefabCache = {};\n        this.propPrefabCache = {};\n    }\n\n    show(name, args?) {\n        let pfbs = name.split('|')\n        for (let i = 0; i < pfbs.length; i++) {\n            cc.log(`show prefab: ${pfbs[i]}`);\n            let pb = this.uiPrefabCache[pfbs[i]];\n            if (pb) {\n                pb.active = true;\n                pb.onenter && pb.onenter(args);\n            } else {\n                cc.resources.load(`prefab/${pfbs[i]}`, cc.Prefab, (err, prefab) => {\n                    if (err) {\n                        return cc.error(err);\n                    }\n                    pb = cc.instantiate(prefab);\n                    pb.parent = this.node;\n                    this.uiPrefabCache[pfbs[i]] = pb;\n                    pb.active = true;\n                    pb.onenter && pb.onenter(args);\n                })\n            }\n        }\n    }\n\n    close(args) {\n        let name = args;\n        if (typeof args == 'object') {\n            name = args.node.name;\n        }\n\n        cc.log(`close prefab: ${name}`);\n        let panel = this.uiPrefabCache[name];\n        if (panel) {\n            panel.onleave && panel.onleave();\n            panel.active = false;\n        }\n    }\n}"]}
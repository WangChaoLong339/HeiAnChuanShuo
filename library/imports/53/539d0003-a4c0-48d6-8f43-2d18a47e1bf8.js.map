{"version":3,"sources":["assets/resources/tool/MultiFrame.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAM,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAwC,8BAAY;IAApD;QAAA,qEAgBC;QAbG,gBAAU,GAAqB,EAAE,CAAC;;IAatC,CAAC;IAXa,2BAAM,GAAhB;IAEA,CAAC;IAEM,6BAAQ,GAAf,UAAgB,GAAW;QACvB,IAAI,GAAG,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;YAC/B,OAAO,EAAE,CAAC,KAAK,CAAC,sBAAoB,GAAG,SAAI,IAAI,CAAC,UAAU,CAAC,MAAQ,CAAC,CAAC;SACxE;QAED,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;IACzE,CAAC;IAZD;QADC,QAAQ,CAAC,EAAE,CAAC,WAAW,CAAC;kDACS;IAHjB,UAAU;QAD9B,OAAO;OACa,UAAU,CAgB9B;IAAD,iBAAC;CAhBD,AAgBC,CAhBuC,EAAE,CAAC,SAAS,GAgBnD;kBAhBoB,UAAU","file":"","sourceRoot":"/","sourcesContent":["const { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class MultiFrame extends cc.Component {\n\n    @property(cc.SpriteFrame)\n    multiFrame: cc.SpriteFrame[] = [];\n\n    protected onLoad(): void {\n\n    }\n\n    public SetFrame(idx: number): void {\n        if (idx >= this.multiFrame.length) {\n            return cc.error(`Cross the border ${idx}/${this.multiFrame.length}`);\n        }\n\n        this.node.getComponent(cc.Sprite).spriteFrame = this.multiFrame[idx];\n    }\n}\n"]}